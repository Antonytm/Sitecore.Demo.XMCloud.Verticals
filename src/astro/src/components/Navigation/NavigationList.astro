---
import React, { useState } from 'react';
import {
  Link,
  LinkField,
  TextField,
  useSitecoreContext,
} from '@sitecore-jss/sitecore-jss-react';

interface Fields {
  Id: string;
  DisplayName: string;
  Title: TextField;
  NavigationTitle: TextField;
  Href: string;
  Querystring: string;
  Children: Array<Fields>;
  Styles: string[];
}

type NavigationProps = {
  params?: { [key: string]: string };
  fields: Fields;
  handleClick: (event?: React.MouseEvent<HTMLElement>) => void;
  relativeLevel: number;
};

const props: NavigationProps = Astro.props;
  //const { sitecoreContext } = useSitecoreContext();
  //const [active, setActive] = useState(false);
  let active = false;
  
const classNameList = props.fields.Styles.concat('rel-level' + props.relativeLevel).join(
    ' '
  );

  // let children: JSX.Element[] = [];
  // if (props.fields.Children && props.fields.Children.length) {
  //   children = props.fields.Children.map((element: Fields, index: number) => (
  //     <NavigationList
  //       key={index + element.Id}
  //       fields={element}
  //       handleClick={props.handleClick}
  //       relativeLevel={props.relativeLevel + 1}
  //     />
  //   ));
  // }

const getLinkField = (props: NavigationProps): LinkField => ({
  value: {
    href: props.fields.Href,
    title: getLinkTitle(props),
    querystring: props.fields.Querystring,
  },
});

const getLinkTitle = (props: NavigationProps): string | undefined => {
  let title;
  if (props.fields.NavigationTitle?.value) {
    title = props.fields.NavigationTitle.value.toString();
  } else if (props.fields.Title?.value) {
    title = props.fields.Title.value.toString();
  } else {
    title = props.fields.DisplayName;
  }

  return title;
};

---

<li
  class={`${classNameList} ${active ? "active" : ""}`}
  key={props.fields.Id}
  tabIndex={0}
>  
  <div
    class={`navigation-title `}
    onClick={() => setActive(() => !active)}
  >
    <Link
      field={getLinkField(props)}
      onClick={props.handleClick}
    >
    {
      // ()=> {
      //   if (props.fields.NavigationTitle) {
      //     return (<Text field={props.fields.NavigationTitle} />);
      //   } else if (props.fields.Title) {
      //     return (<Text field={props.fields.Title} />);
      //   } else {
      //      return (props.fields.DisplayName);
      //   }
      // }
    }
    </Link>
  </div>
</li>
